#!/bin/sh

#  Slackware package build script for OSM OverpassAPI software.
#  Any use of the provided files is at your own risk.
#  
#  Author: Wael Hammoudeh
# Email: w_hammoudeh@hotmail.com
# updated August 26/2025
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# 
#  You need to create "overpass" group and user before building overpassAPI.
#  This is done with the following commands:
#
#      # groupadd -g 367 overpass
#      # useradd -u 367 -g 367 -d /path/to/overpass/home overpass
#
#  Replace "/path/to/overpass/home" with your actual overpass {HOME} directory.
#
#
# This file is part of the Guide for overpass-4-slackware found on GitHub at:
# https://github.com/waelhammoudeh/overpass-4-slackware
#

CWD=$(pwd)
TMP=${TMP:-/tmp/WH}

PKGNAM=overpass
SRC_OSM3S=osm-3s_v
VERSION=0.7.62.8

SRC=${SRC_OSM3S}${VERSION}

BUILD=${BUILD:-1}
TAG=_wh

PKGDEST=$TMP/package-$PKGNAM
MYPREFIX=/usr/local

OUTPUT=/tmp

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-Wall -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# check for overpass group and user first
# www.slackbuilds.org, assigned overpass uid/gid are 367/367
# See http://slackbuilds.org/uid_gid.txt

if ! grep ^overpass: /etc/group 2>&1 > /dev/null; then
  echo " ERROR: Missing overpass GROUP."
  echo ""
  echo "  You must have an overpass group to run this script."
  echo "    # groupadd -g 367 overpass"
  echo ""
   echo " Please see the main \"README\" file, thank you."
  echo ""
 exit 1
elif ! grep ^overpass: /etc/passwd 2>&1 > /dev/null; then
  echo ""
  echo " ERROR: Missing overpass user."
  echo "  You must have an overpass user to run this script."
  echo "    # useradd -u 367 -g 367 -d /var/lib/overpass overpass"
  echo "    # chown overpass:overpass /var/lib/overpass"
  echo  ""
  echo " Overpass {HOME} can be other than /var/lib/overpass"
  echo " Please see the main \"README\" file, thank you."
  echo ""
  exit 1
fi

# set -e prevents script from responding to errors
set -e

rm -rf $TMP/${SRC_OSM3S}* $PKGDEST

mkdir -p $TMP $PKGDEST $OUTPUT

cd $TMP

tar xvzf $CWD/${SRC}.tar.gz

cd $SRC

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;


./configure \
   CXXFLAGS="$SLKCFLAGS" \
   --enable-static=no \
   --enable-lz4 \
   --prefix=$MYPREFIX

make -j$(expr $(nproc) + 1)

make install DESTDIR="$PKGDEST" || exit 1

# package directories
PKG_BIN=$PKGDEST/usr/local/bin
PKG_INCLUDE=$PKGDEST/usr/local/include
PKG_HTML=$PKGDEST/usr/local/html/$PKGNAM
PKG_LIB=$PKGDEST/usr/local/lib/$PKGNAM
PKG_DOC=$PKGDEST/usr/local/doc/$PKGNAM-$VERSION

mkdir -p $PKG_INCLUDE $PKG_HTML $PKG_LIB $PKG_DOC

# move headers to PKG_INCLUDE preserving "osm-3s_v{$VERSION}" directory entry
# this does not look right or good
mv $PKGDEST$SRC/ $PKG_INCLUDE/$SRC/

# html files are copied under "overpass" directory entry
cp -p html/* $PKG_HTML/

# move rules & templates to PKG_LIB. "share" is another option
mv rules/ $PKG_LIB/

# templates directory is created by "make install", we move it under $PKG_LIB/
mv $PKGDEST/usr/local/templates $PKG_LIB/

# copy to documentation directory
cp $CWD/README $PKG_DOC/
cp $CWD/README.SlackBuild $PKG_DOC/
cp $CWD/LICENSE $PKG_DOC/
cp $CWD/$PKGNAM.SlackBuild $PKG_DOC/

mkdir -p $PKG_DOC/guide
cp $CWD/guide/README.setup $PKG_DOC/guide/
cp $CWD/guide/README.update $PKG_DOC/guide/
cp $CWD/guide/test-first.op $PKG_DOC/guide/
cp $CWD/guide/test-area.op $PKG_DOC/guide/


# copy scripts to their destinations
cp $CWD/op_initial_db.sh $PKG_BIN/
chmod 755 $PKG_BIN/op_initial_db.sh

cp $CWD/op_ctl.sh $PKG_BIN/
chmod 755 $PKG_BIN/op_ctl.sh

cp $CWD/guide/op_update_db.sh $PKG_BIN/
chmod 755 $PKG_BIN/op_update_db.sh

cp $CWD/guide/cron4op.sh $PKG_BIN/
chmod 755 $PKG_BIN/cron4op.sh

# install rc.dispatcher start & stop script by root
mkdir -p $PKGDEST/etc/rc.d
install -m 644 "$CWD/rc.dispatcher" "$PKGDEST/etc/rc.d/rc.dispatcher.new"

# copy httpd configure file
mkdir -p $PKGDEST/etc/httpd/extra
install -m 644 "$CWD/httpd-overpass.conf" "$PKGDEST/etc/httpd/extra/httpd-overpass.conf.new"

# copy op_logrotate
mkdir -p $PKGDEST/etc/logrotate.d/
install -m 644 "$CWD/guide/op_logrotate" "$PKGDEST/etc/logrotate.d/op_logrotate.new"

mkdir -p $PKGDEST/install
cat $CWD/slack-desc > $PKGDEST/install/slack-desc
cat $CWD/doinst.sh > $PKGDEST/install/doinst.sh

cd $PKGDEST
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz

exit 0

